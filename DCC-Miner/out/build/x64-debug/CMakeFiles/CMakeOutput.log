The system is: Windows - 10.0.19043 - AMD64
Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
Compiler: C:/Program Files/Microsoft Visual Studio/2022/Preview/VC/Tools/MSVC/14.32.31326/bin/Hostx64/x64/cl.exe 
Build flags: 
Id flags:  

The output was:
0
Microsoft (R) C/C++ Optimizing Compiler Version 19.32.31328 for x64
Copyright (C) Microsoft Corporation.  All rights reserved.

CMakeCCompilerId.c
Microsoft (R) Incremental Linker Version 14.32.31328.0
Copyright (C) Microsoft Corporation.  All rights reserved.

/out:CMakeCCompilerId.exe 
CMakeCCompilerId.obj 


Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CMakeCCompilerId.exe"

Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CMakeCCompilerId.obj"

The C compiler identification is MSVC, found in "D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/3.22.22040401-MSVC_2/CompilerIdC/CMakeCCompilerId.exe"

Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
Compiler: C:/Program Files/Microsoft Visual Studio/2022/Preview/VC/Tools/MSVC/14.32.31326/bin/Hostx64/x64/cl.exe 
Build flags: 
Id flags:  

The output was:
0
Microsoft (R) C/C++ Optimizing Compiler Version 19.32.31328 for x64
Copyright (C) Microsoft Corporation.  All rights reserved.

CMakeCXXCompilerId.cpp
Microsoft (R) Incremental Linker Version 14.32.31328.0
Copyright (C) Microsoft Corporation.  All rights reserved.

/out:CMakeCXXCompilerId.exe 
CMakeCXXCompilerId.obj 


Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CMakeCXXCompilerId.exe"

Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CMakeCXXCompilerId.obj"

The CXX compiler identification is MSVC, found in "D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/3.22.22040401-MSVC_2/CompilerIdCXX/CMakeCXXCompilerId.exe"

Detecting C compiler ABI info compiled with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_b3e9d && [1/2] Building C object CMakeFiles\cmTC_b3e9d.dir\CMakeCCompilerABI.c.obj
[2/2] Linking C executable cmTC_b3e9d.exe



Detecting CXX compiler ABI info compiled with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_21978 && [1/2] Building CXX object CMakeFiles\cmTC_21978.dir\CMakeCXXCompilerABI.cpp.obj
[2/2] Linking CXX executable cmTC_21978.exe



Determining if the include file stdint.h exists passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_4f173 && [1/2] Building C object CMakeFiles\cmTC_4f173.dir\CheckIncludeFile.c.obj
[2/2] Linking C executable cmTC_4f173.exe



Determining if the include file inttypes.h exists passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_e614a && [1/2] Building C object CMakeFiles\cmTC_e614a.dir\CheckIncludeFile.c.obj
[2/2] Linking C executable cmTC_e614a.exe



Determining if the include file sys/types.h exists passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_1d19d && [1/2] Building C object CMakeFiles\cmTC_1d19d.dir\CheckIncludeFile.c.obj
[2/2] Linking C executable cmTC_1d19d.exe



Determining if the include file stddef.h exists passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_28979 && [1/2] Building C object CMakeFiles\cmTC_28979.dir\CheckIncludeFile.c.obj
[2/2] Linking C executable cmTC_28979.exe



Performing C++ SOURCE FILE Test THREAD_SANITIZER_AVAILABLE succeeded with the following compile output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_5281f && [1/2] Building CXX object CMakeFiles\cmTC_5281f.dir\src.cxx.obj
cl : Command line warning D9002 : ignoring unknown option '-fsanitize=thread'
[2/2] Linking CXX executable cmTC_5281f.exe


...and run output:

Return value: 1
Source file was:
int main() { return 0; }
Performing C++ SOURCE FILE Test ADDRESS_SANITIZER_AVAILABLE succeeded with the following compile output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_7bc28 && [1/2] Building CXX object CMakeFiles\cmTC_7bc28.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_7bc28.exe


...and run output:

Return value: 1
Source file was:
int main() { return 0; }
Performing C++ SOURCE FILE Test ALL_SANITIZERS_AVAILABLE succeeded with the following compile output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_aa4f8 && [1/2] Building CXX object CMakeFiles\cmTC_aa4f8.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_aa4f8.exe


...and run output:

Return value: 1
Source file was:
int main() { return 0; }
Determining if the function getch exists in the ws2_32; passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_4a5d5 && [1/2] Building C object CMakeFiles\cmTC_4a5d5.dir\CheckFunctionExists.c.obj
[2/2] Linking C executable cmTC_4a5d5.exe



Determining if the function getch exists in the winmm;ws2_32 passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_a11eb && [1/2] Building C object CMakeFiles\cmTC_a11eb.dir\CheckFunctionExists.c.obj
[2/2] Linking C executable cmTC_a11eb.exe



Determining if files ;windows.h exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_e99e8 && [1/2] Building C object CMakeFiles\cmTC_e99e8.dir\HAVE_WINDOWS_H.c.obj
[2/2] Linking C executable cmTC_e99e8.exe



Determining if files windows.h;ws2tcpip.h exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_2df2f && [1/2] Building C object CMakeFiles\cmTC_2df2f.dir\HAVE_WS2TCPIP_H.c.obj
[2/2] Linking C executable cmTC_2df2f.exe



Determining if files windows.h;ws2tcpip.h;winsock2.h exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_8da9b && [1/2] Building C object CMakeFiles\cmTC_8da9b.dir\HAVE_WINSOCK2_H.c.obj
[2/2] Linking C executable cmTC_8da9b.exe



Determining if files windows.h;ws2tcpip.h;winsock2.h;wincrypt.h exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_93a2a && [1/2] Building C object CMakeFiles\cmTC_93a2a.dir\HAVE_WINCRYPT_H.c.obj
[2/2] Linking C executable cmTC_93a2a.exe



Determining if files windows.h;ws2tcpip.h;winsock2.h;wincrypt.h;stdio.h exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_05f1d && [1/2] Building C object CMakeFiles\cmTC_05f1d.dir\HAVE_STDIO_H.c.obj
[2/2] Linking C executable cmTC_05f1d.exe



Determining if files windows.h;ws2tcpip.h;winsock2.h;wincrypt.h;stdio.h;sys/stat.h;sys/types.h;sys/utime.h;assert.h exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_a6cd7 && [1/2] Building C object CMakeFiles\cmTC_a6cd7.dir\HAVE_ASSERT_H.c.obj
[2/2] Linking C executable cmTC_a6cd7.exe



Determining if files windows.h;ws2tcpip.h;winsock2.h;wincrypt.h;stdio.h;sys/stat.h;sys/types.h;sys/utime.h;assert.h;errno.h exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_48729 && [1/2] Building C object CMakeFiles\cmTC_48729.dir\HAVE_ERRNO_H.c.obj
[2/2] Linking C executable cmTC_48729.exe



Determining if files windows.h;ws2tcpip.h;winsock2.h;wincrypt.h;stdio.h;sys/stat.h;sys/types.h;sys/utime.h;assert.h;errno.h;fcntl.h;io.h;locale.h exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_0ff9c && [1/2] Building C object CMakeFiles\cmTC_0ff9c.dir\HAVE_LOCALE_H.c.obj
[2/2] Linking C executable cmTC_0ff9c.exe



Determining if files windows.h;ws2tcpip.h;winsock2.h;wincrypt.h;stdio.h;sys/stat.h;sys/types.h;sys/utime.h;assert.h;errno.h;fcntl.h;io.h;locale.h;setjmp.h;signal.h;stdbool.h exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_a2495 && [1/2] Building C object CMakeFiles\cmTC_a2495.dir\HAVE_STDBOOL_H.c.obj
[2/2] Linking C executable cmTC_a2495.exe



Determining size of size_t passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_0a738 && [1/2] Building C object CMakeFiles\cmTC_0a738.dir\SIZEOF_SIZE_T.c.obj
[2/2] Linking C executable cmTC_0a738.exe



Determining size of long long passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_e7b5d && [1/2] Building C object CMakeFiles\cmTC_e7b5d.dir\SIZEOF_LONG_LONG.c.obj
[2/2] Linking C executable cmTC_e7b5d.exe



Determining size of long passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_01478 && [1/2] Building C object CMakeFiles\cmTC_01478.dir\SIZEOF_LONG.c.obj
[2/2] Linking C executable cmTC_01478.exe



Determining size of short passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_05f78 && [1/2] Building C object CMakeFiles\cmTC_05f78.dir\SIZEOF_SHORT.c.obj
[2/2] Linking C executable cmTC_05f78.exe



Determining size of int passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_29fa4 && [1/2] Building C object CMakeFiles\cmTC_29fa4.dir\SIZEOF_INT.c.obj
[2/2] Linking C executable cmTC_29fa4.exe



Determining size of __int64 passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_a28c1 && [1/2] Building C object CMakeFiles\cmTC_a28c1.dir\SIZEOF___INT64.c.obj
[2/2] Linking C executable cmTC_a28c1.exe



Determining size of time_t passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_72ae1 && [1/2] Building C object CMakeFiles\cmTC_72ae1.dir\SIZEOF_TIME_T.c.obj
[2/2] Linking C executable cmTC_72ae1.exe



Determining if the gethostbyname exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_79ff6 && [1/2] Building C object CMakeFiles\cmTC_79ff6.dir\CheckSymbolExists.c.obj
D:\Code\DC-Cryptocurrency\DCC-Miner\out\build\x64-debug\CMakeFiles\CMakeTmp\CheckSymbolExists.c(31): warning C4996: 'gethostbyname': Use getaddrinfo() or GetAddrInfoW() instead or define _WINSOCK_DEPRECATED_NO_WARNINGS to disable deprecated API warnings
[2/2] Linking C executable cmTC_79ff6.exe


File D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <windows.h>
#include <ws2tcpip.h>
#include <winsock2.h>
#include <wincrypt.h>
#include <stdio.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <sys/utime.h>
#include <assert.h>
#include <errno.h>
#include <fcntl.h>
#include <io.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <process.h>
#include <stddef.h>
#include <malloc.h>
#include <memory.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef gethostbyname
  return ((int*)(&gethostbyname))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the strtoll exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_16956 && [1/2] Building C object CMakeFiles\cmTC_16956.dir\CheckSymbolExists.c.obj
[2/2] Linking C executable cmTC_16956.exe


File D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <windows.h>
#include <ws2tcpip.h>
#include <winsock2.h>
#include <wincrypt.h>
#include <stdio.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <sys/utime.h>
#include <assert.h>
#include <errno.h>
#include <fcntl.h>
#include <io.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <process.h>
#include <stddef.h>
#include <malloc.h>
#include <memory.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef strtoll
  return ((int*)(&strtoll))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the _strtoi64 exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_31a6a && [1/2] Building C object CMakeFiles\cmTC_31a6a.dir\CheckSymbolExists.c.obj
[2/2] Linking C executable cmTC_31a6a.exe


File D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <windows.h>
#include <ws2tcpip.h>
#include <winsock2.h>
#include <wincrypt.h>
#include <stdio.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <sys/utime.h>
#include <assert.h>
#include <errno.h>
#include <fcntl.h>
#include <io.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <process.h>
#include <stddef.h>
#include <malloc.h>
#include <memory.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef _strtoi64
  return ((int*)(&_strtoi64))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the freeaddrinfo exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_d52e4 && [1/2] Building C object CMakeFiles\cmTC_d52e4.dir\CheckSymbolExists.c.obj
[2/2] Linking C executable cmTC_d52e4.exe


File D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <windows.h>
#include <ws2tcpip.h>
#include <winsock2.h>
#include <wincrypt.h>
#include <stdio.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <sys/utime.h>
#include <assert.h>
#include <errno.h>
#include <fcntl.h>
#include <io.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <process.h>
#include <stddef.h>
#include <malloc.h>
#include <memory.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef freeaddrinfo
  return ((int*)(&freeaddrinfo))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the getprotobyname exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_ea1d6 && [1/2] Building C object CMakeFiles\cmTC_ea1d6.dir\CheckSymbolExists.c.obj
[2/2] Linking C executable cmTC_ea1d6.exe


File D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <windows.h>
#include <ws2tcpip.h>
#include <winsock2.h>
#include <wincrypt.h>
#include <stdio.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <sys/utime.h>
#include <assert.h>
#include <errno.h>
#include <fcntl.h>
#include <io.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <process.h>
#include <stddef.h>
#include <malloc.h>
#include <memory.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef getprotobyname
  return ((int*)(&getprotobyname))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the getpeername exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_153a5 && [1/2] Building C object CMakeFiles\cmTC_153a5.dir\CheckSymbolExists.c.obj
[2/2] Linking C executable cmTC_153a5.exe


File D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <windows.h>
#include <ws2tcpip.h>
#include <winsock2.h>
#include <wincrypt.h>
#include <stdio.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <sys/utime.h>
#include <assert.h>
#include <errno.h>
#include <fcntl.h>
#include <io.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <process.h>
#include <stddef.h>
#include <malloc.h>
#include <memory.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef getpeername
  return ((int*)(&getpeername))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the getsockname exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_6707e && [1/2] Building C object CMakeFiles\cmTC_6707e.dir\CheckSymbolExists.c.obj
[2/2] Linking C executable cmTC_6707e.exe


File D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <windows.h>
#include <ws2tcpip.h>
#include <winsock2.h>
#include <wincrypt.h>
#include <stdio.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <sys/utime.h>
#include <assert.h>
#include <errno.h>
#include <fcntl.h>
#include <io.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <process.h>
#include <stddef.h>
#include <malloc.h>
#include <memory.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef getsockname
  return ((int*)(&getsockname))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the setlocale exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_af67d && [1/2] Building C object CMakeFiles\cmTC_af67d.dir\CheckSymbolExists.c.obj
[2/2] Linking C executable cmTC_af67d.exe


File D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <windows.h>
#include <ws2tcpip.h>
#include <winsock2.h>
#include <wincrypt.h>
#include <stdio.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <sys/utime.h>
#include <assert.h>
#include <errno.h>
#include <fcntl.h>
#include <io.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <process.h>
#include <stddef.h>
#include <malloc.h>
#include <memory.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef setlocale
  return ((int*)(&setlocale))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the setmode exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_17989 && [1/2] Building C object CMakeFiles\cmTC_17989.dir\CheckSymbolExists.c.obj
D:\Code\DC-Cryptocurrency\DCC-Miner\out\build\x64-debug\CMakeFiles\CMakeTmp\CheckSymbolExists.c(31): warning C4996: 'setmode': The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _setmode. See online help for details.
[2/2] Linking C executable cmTC_17989.exe


File D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <windows.h>
#include <ws2tcpip.h>
#include <winsock2.h>
#include <wincrypt.h>
#include <stdio.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <sys/utime.h>
#include <assert.h>
#include <errno.h>
#include <fcntl.h>
#include <io.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <process.h>
#include <stddef.h>
#include <malloc.h>
#include <memory.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef setmode
  return ((int*)(&setmode))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the setsockopt exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_e275c && [1/2] Building C object CMakeFiles\cmTC_e275c.dir\CheckSymbolExists.c.obj
[2/2] Linking C executable cmTC_e275c.exe


File D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <windows.h>
#include <ws2tcpip.h>
#include <winsock2.h>
#include <wincrypt.h>
#include <stdio.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <sys/utime.h>
#include <assert.h>
#include <errno.h>
#include <fcntl.h>
#include <io.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <process.h>
#include <stddef.h>
#include <malloc.h>
#include <memory.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef setsockopt
  return ((int*)(&setsockopt))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the inet_pton exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_80644 && [1/2] Building C object CMakeFiles\cmTC_80644.dir\CheckSymbolExists.c.obj
[2/2] Linking C executable cmTC_80644.exe


File D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <windows.h>
#include <ws2tcpip.h>
#include <winsock2.h>
#include <wincrypt.h>
#include <stdio.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <sys/utime.h>
#include <assert.h>
#include <errno.h>
#include <fcntl.h>
#include <io.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <process.h>
#include <stddef.h>
#include <malloc.h>
#include <memory.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef inet_pton
  return ((int*)(&inet_pton))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Performing Curl Test HAVE_IOCTLSOCKET passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_fb3c5 && [1/2] Building C object CMakeFiles\cmTC_fb3c5.dir\CurlTests.c.obj
D:\Code\DC-Cryptocurrency\DCC-Miner\out\build\x64-debug\_deps\curl-src\CMake\CurlTests.c(241) : warning C4700: uninitialized local variable 'socket' used
[2/2] Linking C executable cmTC_fb3c5.exe


Performing Curl Test HAVE_IOCTLSOCKET_FIONBIO passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_74853 && [1/2] Building C object CMakeFiles\cmTC_74853.dir\CurlTests.c.obj
[2/2] Linking C executable cmTC_74853.exe


Performing Curl Test HAVE_BOOL_T passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_77271 && [1/2] Building C object CMakeFiles\cmTC_77271.dir\CurlTests.c.obj
[2/2] Linking C executable cmTC_77271.exe


Performing Curl Test HAVE_VARIADIC_MACROS_C99 passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_c9fb3 && [1/2] Building C object CMakeFiles\cmTC_c9fb3.dir\CurlTests.c.obj
[2/2] Linking C executable cmTC_c9fb3.exe


Determining size of off_t passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_7c570 && [1/2] Building C object CMakeFiles\cmTC_7c570.dir\SIZEOF_OFF_T.c.obj
[2/2] Linking C executable cmTC_7c570.exe



Determining size of curl_off_t passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_8e44b && [1/2] Building C object CMakeFiles\cmTC_8e44b.dir\SIZEOF_CURL_OFF_T.c.obj
[2/2] Linking C executable cmTC_8e44b.exe



Performing C SOURCE FILE Test curl_cv_recv succeeded with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_4d9fe && [1/2] Building C object CMakeFiles\cmTC_4d9fe.dir\src.c.obj
[2/2] Linking C static library cmTC_4d9fe.lib


Source file was:
#undef inline
#include <winsock2.h>
#include <windows.h>
#ifndef WIN32_LEAN_AND_MEAN
#define WIN32_LEAN_AND_MEAN
#endif
int main(void) {
    recv(0, 0, 0, 0);
    return 0;
}
Performing C SOURCE FILE Test curl_cv_func_recv_test succeeded with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_d499e && [1/2] Building C object CMakeFiles\cmTC_d499e.dir\src.c.obj
[2/2] Linking C static library cmTC_d499e.lib


Source file was:

    #undef inline
#include <winsock2.h>
#include <windows.h>
#ifndef WIN32_LEAN_AND_MEAN
#define WIN32_LEAN_AND_MEAN
#endif
    #ifdef WINSOCK_API_LINKAGE
    WINSOCK_API_LINKAGE
    #endif
    extern int PASCAL
    recv(SOCKET, char *, int, int);
    int main(void) {
      SOCKET s=0;
      char * buf=0;
      int len=0;
      int flags=0;
      int res = recv(s, buf, len, flags);
      (void) res;
      return 0;
    }
Performing C SOURCE FILE Test curl_cv_send succeeded with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_d372d && [1/2] Building C object CMakeFiles\cmTC_d372d.dir\src.c.obj
[2/2] Linking C static library cmTC_d372d.lib


Source file was:
#undef inline
#include <winsock2.h>
#include <windows.h>
#ifndef WIN32_LEAN_AND_MEAN
#define WIN32_LEAN_AND_MEAN
#endif
int main(void) {
    send(0, 0, 0, 0);
    return 0;
}
Performing C SOURCE FILE Test curl_cv_func_send_test succeeded with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_cbbc0 && [1/2] Building C object CMakeFiles\cmTC_cbbc0.dir\src.c.obj
[2/2] Linking C static library cmTC_cbbc0.lib


Source file was:

    #undef inline
#include <winsock2.h>
#include <windows.h>
#ifndef WIN32_LEAN_AND_MEAN
#define WIN32_LEAN_AND_MEAN
#endif
    #ifdef WINSOCK_API_LINKAGE
    WINSOCK_API_LINKAGE
    #endif
    extern int PASCAL
    send(SOCKET, const char *, int, int);
    int main(void) {
      SOCKET s=0;
      const char * buf=0;
      int len=0;
      int flags=0;
      int res = send(s, buf, len, flags);
      (void) res;
      return 0;
    }
Performing C SOURCE FILE Test HAVE_STRUCT_TIMEVAL succeeded with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_3cd81 && [1/2] Building C object CMakeFiles\cmTC_3cd81.dir\src.c.obj
[2/2] Linking C static library cmTC_3cd81.lib


Source file was:
#undef inline
#include <winsock2.h>
#include <windows.h>
#ifndef WIN32_LEAN_AND_MEAN
#define WIN32_LEAN_AND_MEAN
#endif
int main(void) {
  struct timeval ts;
  ts.tv_sec  = 0;
  ts.tv_usec = 0;
  (void)ts;
  return 0;
}
Determining size of struct sockaddr_storage passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_57286 && [1/2] Building C object CMakeFiles\cmTC_57286.dir\SIZEOF_STRUCT_SOCKADDR_STORAGE.c.obj
[2/2] Linking C static library cmTC_57286.lib



Determining if the CryptAcquireContext exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_05da3 && [1/2] Building C object CMakeFiles\cmTC_05da3.dir\CheckSymbolExists.c.obj
[2/2] Linking C executable cmTC_05da3.exe


File D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-debug/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <windows.h>
#include <ws2tcpip.h>
#include <winsock2.h>
#include <wincrypt.h>
#include <stdio.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <sys/utime.h>
#include <assert.h>
#include <errno.h>
#include <fcntl.h>
#include <io.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <process.h>
#include <stddef.h>
#include <malloc.h>
#include <memory.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef CryptAcquireContext
  return ((int*)(&CryptAcquireContext))[argc];
#else
  (void)argc;
  return 0;
#endif
}
