The system is: Windows - 10.0.19043 - AMD64
Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
Compiler: C:/Program Files/Microsoft Visual Studio/2022/Preview/VC/Tools/MSVC/14.32.31326/bin/Hostx64/x64/cl.exe 
Build flags: 
Id flags:  

The output was:
0
Microsoft (R) C/C++ Optimizing Compiler Version 19.32.31328 for x64
Copyright (C) Microsoft Corporation.  All rights reserved.

CMakeCCompilerId.c
Microsoft (R) Incremental Linker Version 14.32.31328.0
Copyright (C) Microsoft Corporation.  All rights reserved.

/out:CMakeCCompilerId.exe 
CMakeCCompilerId.obj 


Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CMakeCCompilerId.exe"

Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CMakeCCompilerId.obj"

The C compiler identification is MSVC, found in "D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/3.22.22040401-MSVC_2/CompilerIdC/CMakeCCompilerId.exe"

Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
Compiler: C:/Program Files/Microsoft Visual Studio/2022/Preview/VC/Tools/MSVC/14.32.31326/bin/Hostx64/x64/cl.exe 
Build flags: 
Id flags:  

The output was:
0
Microsoft (R) C/C++ Optimizing Compiler Version 19.32.31328 for x64
Copyright (C) Microsoft Corporation.  All rights reserved.

CMakeCXXCompilerId.cpp
Microsoft (R) Incremental Linker Version 14.32.31328.0
Copyright (C) Microsoft Corporation.  All rights reserved.

/out:CMakeCXXCompilerId.exe 
CMakeCXXCompilerId.obj 


Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CMakeCXXCompilerId.exe"

Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CMakeCXXCompilerId.obj"

The CXX compiler identification is MSVC, found in "D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/3.22.22040401-MSVC_2/CompilerIdCXX/CMakeCXXCompilerId.exe"

Detecting C compiler ABI info compiled with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_17a99 && [1/2] Building C object CMakeFiles\cmTC_17a99.dir\CMakeCCompilerABI.c.obj
[2/2] Linking C executable cmTC_17a99.exe



Detecting CXX compiler ABI info compiled with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_4755a && [1/2] Building CXX object CMakeFiles\cmTC_4755a.dir\CMakeCXXCompilerABI.cpp.obj
[2/2] Linking CXX executable cmTC_4755a.exe



The system is: Windows - 10.0.19043 - AMD64
Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
Compiler: C:/Program Files/Microsoft Visual Studio/2022/Preview/VC/Tools/MSVC/14.32.31326/bin/Hostx64/x64/cl.exe 
Build flags: 
Id flags:  

The output was:
0
Microsoft (R) C/C++ Optimizing Compiler Version 19.32.31328 for x64
Copyright (C) Microsoft Corporation.  All rights reserved.

CMakeCCompilerId.c
Microsoft (R) Incremental Linker Version 14.32.31328.0
Copyright (C) Microsoft Corporation.  All rights reserved.

/out:CMakeCCompilerId.exe 
CMakeCCompilerId.obj 


Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CMakeCCompilerId.exe"

Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CMakeCCompilerId.obj"

The C compiler identification is MSVC, found in "D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/3.22.22040401-MSVC_2/CompilerIdC/CMakeCCompilerId.exe"

Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
Compiler: C:/Program Files/Microsoft Visual Studio/2022/Preview/VC/Tools/MSVC/14.32.31326/bin/Hostx64/x64/cl.exe 
Build flags: 
Id flags:  

The output was:
0
Microsoft (R) C/C++ Optimizing Compiler Version 19.32.31328 for x64
Copyright (C) Microsoft Corporation.  All rights reserved.

CMakeCXXCompilerId.cpp
Microsoft (R) Incremental Linker Version 14.32.31328.0
Copyright (C) Microsoft Corporation.  All rights reserved.

/out:CMakeCXXCompilerId.exe 
CMakeCXXCompilerId.obj 


Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CMakeCXXCompilerId.exe"

Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CMakeCXXCompilerId.obj"

The CXX compiler identification is MSVC, found in "D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/3.22.22040401-MSVC_2/CompilerIdCXX/CMakeCXXCompilerId.exe"

Detecting C compiler ABI info compiled with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_efcf0 && [1/2] Building C object CMakeFiles\cmTC_efcf0.dir\CMakeCCompilerABI.c.obj
[2/2] Linking C executable cmTC_efcf0.exe



Detecting CXX compiler ABI info compiled with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_b3503 && [1/2] Building CXX object CMakeFiles\cmTC_b3503.dir\CMakeCXXCompilerABI.cpp.obj
[2/2] Linking CXX executable cmTC_b3503.exe



Determining if the include file stdint.h exists passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_ae617 && [1/2] Building C object CMakeFiles\cmTC_ae617.dir\CheckIncludeFile.c.obj
[2/2] Linking C executable cmTC_ae617.exe



Determining if the include file inttypes.h exists passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_a2e5d && [1/2] Building C object CMakeFiles\cmTC_a2e5d.dir\CheckIncludeFile.c.obj
[2/2] Linking C executable cmTC_a2e5d.exe



Determining if the include file sys/types.h exists passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_91656 && [1/2] Building C object CMakeFiles\cmTC_91656.dir\CheckIncludeFile.c.obj
[2/2] Linking C executable cmTC_91656.exe



Determining if the include file stddef.h exists passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_a3f8c && [1/2] Building C object CMakeFiles\cmTC_a3f8c.dir\CheckIncludeFile.c.obj
[2/2] Linking C executable cmTC_a3f8c.exe



Performing C++ SOURCE FILE Test THREAD_SANITIZER_AVAILABLE succeeded with the following compile output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_80db5 && [1/2] Building CXX object CMakeFiles\cmTC_80db5.dir\src.cxx.obj
cl : Command line warning D9002 : ignoring unknown option '-fsanitize=thread'
[2/2] Linking CXX executable cmTC_80db5.exe


...and run output:

Return value: 1
Source file was:
int main() { return 0; }
Performing C++ SOURCE FILE Test ADDRESS_SANITIZER_AVAILABLE succeeded with the following compile output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_1eeea && [1/2] Building CXX object CMakeFiles\cmTC_1eeea.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_1eeea.exe


...and run output:

Return value: 1
Source file was:
int main() { return 0; }
Performing C++ SOURCE FILE Test ALL_SANITIZERS_AVAILABLE succeeded with the following compile output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_e5699 && [1/2] Building CXX object CMakeFiles\cmTC_e5699.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_e5699.exe


...and run output:

Return value: 1
Source file was:
int main() { return 0; }
Determining if the function getch exists in the ws2_32; passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_6c78e && [1/2] Building C object CMakeFiles\cmTC_6c78e.dir\CheckFunctionExists.c.obj
[2/2] Linking C executable cmTC_6c78e.exe



Determining if the function getch exists in the winmm;ws2_32 passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_cfb5a && [1/2] Building C object CMakeFiles\cmTC_cfb5a.dir\CheckFunctionExists.c.obj
[2/2] Linking C executable cmTC_cfb5a.exe



Determining if files ;windows.h exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_5af3d && [1/2] Building C object CMakeFiles\cmTC_5af3d.dir\HAVE_WINDOWS_H.c.obj
[2/2] Linking C executable cmTC_5af3d.exe



Determining if files windows.h;ws2tcpip.h exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_321c9 && [1/2] Building C object CMakeFiles\cmTC_321c9.dir\HAVE_WS2TCPIP_H.c.obj
[2/2] Linking C executable cmTC_321c9.exe



Determining if files windows.h;ws2tcpip.h;winsock2.h exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_56dd8 && [1/2] Building C object CMakeFiles\cmTC_56dd8.dir\HAVE_WINSOCK2_H.c.obj
[2/2] Linking C executable cmTC_56dd8.exe



Determining if files windows.h;ws2tcpip.h;winsock2.h;wincrypt.h exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_5404e && [1/2] Building C object CMakeFiles\cmTC_5404e.dir\HAVE_WINCRYPT_H.c.obj
[2/2] Linking C executable cmTC_5404e.exe



Determining if files windows.h;ws2tcpip.h;winsock2.h;wincrypt.h;stdio.h exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_54748 && [1/2] Building C object CMakeFiles\cmTC_54748.dir\HAVE_STDIO_H.c.obj
[2/2] Linking C executable cmTC_54748.exe



Determining if files windows.h;ws2tcpip.h;winsock2.h;wincrypt.h;stdio.h;sys/stat.h;sys/types.h;sys/utime.h;assert.h exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_7762e && [1/2] Building C object CMakeFiles\cmTC_7762e.dir\HAVE_ASSERT_H.c.obj
[2/2] Linking C executable cmTC_7762e.exe



Determining if files windows.h;ws2tcpip.h;winsock2.h;wincrypt.h;stdio.h;sys/stat.h;sys/types.h;sys/utime.h;assert.h;errno.h exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_0c83a && [1/2] Building C object CMakeFiles\cmTC_0c83a.dir\HAVE_ERRNO_H.c.obj
[2/2] Linking C executable cmTC_0c83a.exe



Determining if files windows.h;ws2tcpip.h;winsock2.h;wincrypt.h;stdio.h;sys/stat.h;sys/types.h;sys/utime.h;assert.h;errno.h;fcntl.h;io.h;locale.h exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_e2745 && [1/2] Building C object CMakeFiles\cmTC_e2745.dir\HAVE_LOCALE_H.c.obj
[2/2] Linking C executable cmTC_e2745.exe



Determining if files windows.h;ws2tcpip.h;winsock2.h;wincrypt.h;stdio.h;sys/stat.h;sys/types.h;sys/utime.h;assert.h;errno.h;fcntl.h;io.h;locale.h;setjmp.h;signal.h;stdbool.h exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_52b16 && [1/2] Building C object CMakeFiles\cmTC_52b16.dir\HAVE_STDBOOL_H.c.obj
[2/2] Linking C executable cmTC_52b16.exe



Determining size of size_t passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_00079 && [1/2] Building C object CMakeFiles\cmTC_00079.dir\SIZEOF_SIZE_T.c.obj
[2/2] Linking C executable cmTC_00079.exe



Determining size of long long passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_048d3 && [1/2] Building C object CMakeFiles\cmTC_048d3.dir\SIZEOF_LONG_LONG.c.obj
[2/2] Linking C executable cmTC_048d3.exe



Determining size of long passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_3b750 && [1/2] Building C object CMakeFiles\cmTC_3b750.dir\SIZEOF_LONG.c.obj
[2/2] Linking C executable cmTC_3b750.exe



Determining size of short passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_66754 && [1/2] Building C object CMakeFiles\cmTC_66754.dir\SIZEOF_SHORT.c.obj
[2/2] Linking C executable cmTC_66754.exe



Determining size of int passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_bbcf4 && [1/2] Building C object CMakeFiles\cmTC_bbcf4.dir\SIZEOF_INT.c.obj
[2/2] Linking C executable cmTC_bbcf4.exe



Determining size of __int64 passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_b7b56 && [1/2] Building C object CMakeFiles\cmTC_b7b56.dir\SIZEOF___INT64.c.obj
[2/2] Linking C executable cmTC_b7b56.exe



Determining size of time_t passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_20a3e && [1/2] Building C object CMakeFiles\cmTC_20a3e.dir\SIZEOF_TIME_T.c.obj
[2/2] Linking C executable cmTC_20a3e.exe



Determining if the gethostbyname exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_a01a8 && [1/2] Building C object CMakeFiles\cmTC_a01a8.dir\CheckSymbolExists.c.obj
D:\Code\DC-Cryptocurrency\DCC-Miner\out\build\x64-release\CMakeFiles\CMakeTmp\CheckSymbolExists.c(31): warning C4996: 'gethostbyname': Use getaddrinfo() or GetAddrInfoW() instead or define _WINSOCK_DEPRECATED_NO_WARNINGS to disable deprecated API warnings
[2/2] Linking C executable cmTC_a01a8.exe


File D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <windows.h>
#include <ws2tcpip.h>
#include <winsock2.h>
#include <wincrypt.h>
#include <stdio.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <sys/utime.h>
#include <assert.h>
#include <errno.h>
#include <fcntl.h>
#include <io.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <process.h>
#include <stddef.h>
#include <malloc.h>
#include <memory.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef gethostbyname
  return ((int*)(&gethostbyname))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the strtoll exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_66a3d && [1/2] Building C object CMakeFiles\cmTC_66a3d.dir\CheckSymbolExists.c.obj
[2/2] Linking C executable cmTC_66a3d.exe


File D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <windows.h>
#include <ws2tcpip.h>
#include <winsock2.h>
#include <wincrypt.h>
#include <stdio.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <sys/utime.h>
#include <assert.h>
#include <errno.h>
#include <fcntl.h>
#include <io.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <process.h>
#include <stddef.h>
#include <malloc.h>
#include <memory.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef strtoll
  return ((int*)(&strtoll))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the _strtoi64 exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_d29d8 && [1/2] Building C object CMakeFiles\cmTC_d29d8.dir\CheckSymbolExists.c.obj
[2/2] Linking C executable cmTC_d29d8.exe


File D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <windows.h>
#include <ws2tcpip.h>
#include <winsock2.h>
#include <wincrypt.h>
#include <stdio.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <sys/utime.h>
#include <assert.h>
#include <errno.h>
#include <fcntl.h>
#include <io.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <process.h>
#include <stddef.h>
#include <malloc.h>
#include <memory.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef _strtoi64
  return ((int*)(&_strtoi64))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the freeaddrinfo exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_f8b52 && [1/2] Building C object CMakeFiles\cmTC_f8b52.dir\CheckSymbolExists.c.obj
[2/2] Linking C executable cmTC_f8b52.exe


File D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <windows.h>
#include <ws2tcpip.h>
#include <winsock2.h>
#include <wincrypt.h>
#include <stdio.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <sys/utime.h>
#include <assert.h>
#include <errno.h>
#include <fcntl.h>
#include <io.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <process.h>
#include <stddef.h>
#include <malloc.h>
#include <memory.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef freeaddrinfo
  return ((int*)(&freeaddrinfo))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the getprotobyname exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_fdb01 && [1/2] Building C object CMakeFiles\cmTC_fdb01.dir\CheckSymbolExists.c.obj
[2/2] Linking C executable cmTC_fdb01.exe


File D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <windows.h>
#include <ws2tcpip.h>
#include <winsock2.h>
#include <wincrypt.h>
#include <stdio.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <sys/utime.h>
#include <assert.h>
#include <errno.h>
#include <fcntl.h>
#include <io.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <process.h>
#include <stddef.h>
#include <malloc.h>
#include <memory.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef getprotobyname
  return ((int*)(&getprotobyname))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the getpeername exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_624ae && [1/2] Building C object CMakeFiles\cmTC_624ae.dir\CheckSymbolExists.c.obj
[2/2] Linking C executable cmTC_624ae.exe


File D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <windows.h>
#include <ws2tcpip.h>
#include <winsock2.h>
#include <wincrypt.h>
#include <stdio.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <sys/utime.h>
#include <assert.h>
#include <errno.h>
#include <fcntl.h>
#include <io.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <process.h>
#include <stddef.h>
#include <malloc.h>
#include <memory.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef getpeername
  return ((int*)(&getpeername))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the getsockname exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_2e5df && [1/2] Building C object CMakeFiles\cmTC_2e5df.dir\CheckSymbolExists.c.obj
[2/2] Linking C executable cmTC_2e5df.exe


File D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <windows.h>
#include <ws2tcpip.h>
#include <winsock2.h>
#include <wincrypt.h>
#include <stdio.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <sys/utime.h>
#include <assert.h>
#include <errno.h>
#include <fcntl.h>
#include <io.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <process.h>
#include <stddef.h>
#include <malloc.h>
#include <memory.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef getsockname
  return ((int*)(&getsockname))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the setlocale exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_c8c10 && [1/2] Building C object CMakeFiles\cmTC_c8c10.dir\CheckSymbolExists.c.obj
[2/2] Linking C executable cmTC_c8c10.exe


File D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <windows.h>
#include <ws2tcpip.h>
#include <winsock2.h>
#include <wincrypt.h>
#include <stdio.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <sys/utime.h>
#include <assert.h>
#include <errno.h>
#include <fcntl.h>
#include <io.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <process.h>
#include <stddef.h>
#include <malloc.h>
#include <memory.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef setlocale
  return ((int*)(&setlocale))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the setmode exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_b3b2c && [1/2] Building C object CMakeFiles\cmTC_b3b2c.dir\CheckSymbolExists.c.obj
D:\Code\DC-Cryptocurrency\DCC-Miner\out\build\x64-release\CMakeFiles\CMakeTmp\CheckSymbolExists.c(31): warning C4996: 'setmode': The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _setmode. See online help for details.
[2/2] Linking C executable cmTC_b3b2c.exe


File D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <windows.h>
#include <ws2tcpip.h>
#include <winsock2.h>
#include <wincrypt.h>
#include <stdio.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <sys/utime.h>
#include <assert.h>
#include <errno.h>
#include <fcntl.h>
#include <io.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <process.h>
#include <stddef.h>
#include <malloc.h>
#include <memory.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef setmode
  return ((int*)(&setmode))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the setsockopt exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_40873 && [1/2] Building C object CMakeFiles\cmTC_40873.dir\CheckSymbolExists.c.obj
[2/2] Linking C executable cmTC_40873.exe


File D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <windows.h>
#include <ws2tcpip.h>
#include <winsock2.h>
#include <wincrypt.h>
#include <stdio.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <sys/utime.h>
#include <assert.h>
#include <errno.h>
#include <fcntl.h>
#include <io.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <process.h>
#include <stddef.h>
#include <malloc.h>
#include <memory.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef setsockopt
  return ((int*)(&setsockopt))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the inet_pton exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_8dcc7 && [1/2] Building C object CMakeFiles\cmTC_8dcc7.dir\CheckSymbolExists.c.obj
[2/2] Linking C executable cmTC_8dcc7.exe


File D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <windows.h>
#include <ws2tcpip.h>
#include <winsock2.h>
#include <wincrypt.h>
#include <stdio.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <sys/utime.h>
#include <assert.h>
#include <errno.h>
#include <fcntl.h>
#include <io.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <process.h>
#include <stddef.h>
#include <malloc.h>
#include <memory.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef inet_pton
  return ((int*)(&inet_pton))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Performing Curl Test HAVE_IOCTLSOCKET passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_b8fc7 && [1/2] Building C object CMakeFiles\cmTC_b8fc7.dir\CurlTests.c.obj
D:\Code\DC-Cryptocurrency\DCC-Miner\out\build\x64-release\_deps\curl-src\CMake\CurlTests.c(241) : warning C4700: uninitialized local variable 'socket' used
[2/2] Linking C executable cmTC_b8fc7.exe


Performing Curl Test HAVE_IOCTLSOCKET_FIONBIO passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_26951 && [1/2] Building C object CMakeFiles\cmTC_26951.dir\CurlTests.c.obj
[2/2] Linking C executable cmTC_26951.exe


Performing Curl Test HAVE_BOOL_T passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_14d55 && [1/2] Building C object CMakeFiles\cmTC_14d55.dir\CurlTests.c.obj
[2/2] Linking C executable cmTC_14d55.exe


Performing Curl Test HAVE_VARIADIC_MACROS_C99 passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_4fe8f && [1/2] Building C object CMakeFiles\cmTC_4fe8f.dir\CurlTests.c.obj
[2/2] Linking C executable cmTC_4fe8f.exe


Determining size of off_t passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_bc13e && [1/2] Building C object CMakeFiles\cmTC_bc13e.dir\SIZEOF_OFF_T.c.obj
[2/2] Linking C executable cmTC_bc13e.exe



Determining size of curl_off_t passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_7b04d && [1/2] Building C object CMakeFiles\cmTC_7b04d.dir\SIZEOF_CURL_OFF_T.c.obj
[2/2] Linking C executable cmTC_7b04d.exe



Performing C SOURCE FILE Test curl_cv_recv succeeded with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_09281 && [1/2] Building C object CMakeFiles\cmTC_09281.dir\src.c.obj
[2/2] Linking C static library cmTC_09281.lib


Source file was:
#undef inline
#include <winsock2.h>
#include <windows.h>
#ifndef WIN32_LEAN_AND_MEAN
#define WIN32_LEAN_AND_MEAN
#endif
int main(void) {
    recv(0, 0, 0, 0);
    return 0;
}
Performing C SOURCE FILE Test curl_cv_func_recv_test succeeded with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_c6519 && [1/2] Building C object CMakeFiles\cmTC_c6519.dir\src.c.obj
[2/2] Linking C static library cmTC_c6519.lib


Source file was:

    #undef inline
#include <winsock2.h>
#include <windows.h>
#ifndef WIN32_LEAN_AND_MEAN
#define WIN32_LEAN_AND_MEAN
#endif
    #ifdef WINSOCK_API_LINKAGE
    WINSOCK_API_LINKAGE
    #endif
    extern int PASCAL
    recv(SOCKET, char *, int, int);
    int main(void) {
      SOCKET s=0;
      char * buf=0;
      int len=0;
      int flags=0;
      int res = recv(s, buf, len, flags);
      (void) res;
      return 0;
    }
Performing C SOURCE FILE Test curl_cv_send succeeded with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_a5f8e && [1/2] Building C object CMakeFiles\cmTC_a5f8e.dir\src.c.obj
[2/2] Linking C static library cmTC_a5f8e.lib


Source file was:
#undef inline
#include <winsock2.h>
#include <windows.h>
#ifndef WIN32_LEAN_AND_MEAN
#define WIN32_LEAN_AND_MEAN
#endif
int main(void) {
    send(0, 0, 0, 0);
    return 0;
}
Performing C SOURCE FILE Test curl_cv_func_send_test succeeded with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_cb0d4 && [1/2] Building C object CMakeFiles\cmTC_cb0d4.dir\src.c.obj
[2/2] Linking C static library cmTC_cb0d4.lib


Source file was:

    #undef inline
#include <winsock2.h>
#include <windows.h>
#ifndef WIN32_LEAN_AND_MEAN
#define WIN32_LEAN_AND_MEAN
#endif
    #ifdef WINSOCK_API_LINKAGE
    WINSOCK_API_LINKAGE
    #endif
    extern int PASCAL
    send(SOCKET, const char *, int, int);
    int main(void) {
      SOCKET s=0;
      const char * buf=0;
      int len=0;
      int flags=0;
      int res = send(s, buf, len, flags);
      (void) res;
      return 0;
    }
Performing C SOURCE FILE Test HAVE_STRUCT_TIMEVAL succeeded with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_dfcf6 && [1/2] Building C object CMakeFiles\cmTC_dfcf6.dir\src.c.obj
[2/2] Linking C static library cmTC_dfcf6.lib


Source file was:
#undef inline
#include <winsock2.h>
#include <windows.h>
#ifndef WIN32_LEAN_AND_MEAN
#define WIN32_LEAN_AND_MEAN
#endif
int main(void) {
  struct timeval ts;
  ts.tv_sec  = 0;
  ts.tv_usec = 0;
  (void)ts;
  return 0;
}
Determining size of struct sockaddr_storage passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_bfcd1 && [1/2] Building C object CMakeFiles\cmTC_bfcd1.dir\SIZEOF_STRUCT_SOCKADDR_STORAGE.c.obj
[2/2] Linking C static library cmTC_bfcd1.lib



Determining if the CryptAcquireContext exist passed with the following output:
Change Dir: D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_5f486 && [1/2] Building C object CMakeFiles\cmTC_5f486.dir\CheckSymbolExists.c.obj
[2/2] Linking C executable cmTC_5f486.exe


File D:/Code/DC-Cryptocurrency/DCC-Miner/out/build/x64-release/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <windows.h>
#include <ws2tcpip.h>
#include <winsock2.h>
#include <wincrypt.h>
#include <stdio.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <sys/utime.h>
#include <assert.h>
#include <errno.h>
#include <fcntl.h>
#include <io.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <process.h>
#include <stddef.h>
#include <malloc.h>
#include <memory.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef CryptAcquireContext
  return ((int*)(&CryptAcquireContext))[argc];
#else
  (void)argc;
  return 0;
#endif
}
